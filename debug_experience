
1. 如何安装？
 如果已经安装了maskrcnn-benchmark，pytorch_nightly 版本，安装maskrcnn-benchmark就很简单了。
 只需要安装一个mmcv，然后从步骤c执行到步骤e就行了，就这么简单。
 安装的同时可以把数据集的软连接给设置好，这样跑模型就一步到位了。
 
2.在FPN的backbone参数配置里rpn_head={ anchor_scales=[8],}， 为啥就8一个scale呢？
  # 生成的anchor的baselen，baselen = sqrt(w*h)，w和h为anchor的宽和高

3. 在FPN的backbone参数配置里rpn_head={anchor_strides=[4, 8, 16, 32, 64],}但是
   bbox_roi_extractor={featmap_strides=[4, 8, 16, 32]),}里为啥没有64？
   具体答案还得在FPN的论文里找。
   https://github.com/open-mmlab/mmdetection/issues/614
   https://blog.csdn.net/u013565669/article/details/86750809
   
4. copy_if failed to synchronize: device-side assert triggered
   是因为config中的num_classes == my_dataset 中的CLASSES的数量 + 1， 所以有三个原因:
   a. num_classes的数没写对忘了加1
   b. my_dataset中CLASSES里面的label拼写错了，必须和coco格式里面的label都对应上，不能随便写。
   c. 如果上面两个正确，还出现这个问题，那就有可能自己数据集根本没有拷贝过来，还是用的原来COCO人家的数据集。
   
5. 采用dist_train多GPU训练和单GPU训练的ETA基本相同，这是为什么呢？
   https://github.com/open-mmlab/mmdetection/issues/504
   采用多GPU训练时，一定要加 --launcher pytorch 这个参数，要不然是不会用dist_train的方式训练的。
   
6. 默认情况下是不会evaluate valdata的, 需要加一个--validate。

7. 内存明明够用却显示不足，可能是因为distribue 训练，没有用对。我改对之后就没有这种情况出现了。

8. cocoapi的源码我改了，在maskrcnn-benchmark上用的时候可以用，但是安装mmdetection之后又变成原代码形式的了，这是为什么？
   mmdetection自动安装了一个cocoapi, 还得在自己改的位置编译一遍自己的cocoapi代码，python setup.py develop，
   但是我编译了好几遍都是在其他环境中编译的，所以执行的时候还是原来的源代码。。。

9. inference的时候将图片扩大精度会变高的。
